name: secure-rdp

on:
  workflow_dispatch:

jobs:
  rdp-job:
    runs-on: windows-latest
    timeout-minutes: 3600

    steps:
      - name: Configure Core RDP Settings
        run: |
          # Enable Remote Desktop
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' `
                           -Name "fDenyTSConnections" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' `
                           -Name "UserAuthentication" -Value 0 -Force
          Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' `
                           -Name "SecurityLayer" -Value 0 -Force

          # Firewall rule for RDP
          netsh advfirewall firewall delete rule name="RDP-Github" > $null 2>&1
          netsh advfirewall firewall add rule name="RDP-Github" dir=in action=allow protocol=TCP localport=3389

          # Restart RDP service
          Restart-Service -Name TermService -Force

      - name: Create RDP User with Strong Password
        run: |
          $username = "rizky"
          $password = "Rizky@2025GH!"

          $securePass = ConvertTo-SecureString $password -AsPlainText -Force

          # Remove existing user if already exists
          if (Get-LocalUser -Name $username -ErrorAction SilentlyContinue) {
            Remove-LocalUser -Name $username -ErrorAction SilentlyContinue
            Start-Sleep -Seconds 1
          }

          # Create user
          New-LocalUser -Name $username -Password $securePass -AccountNeverExpires -Description "RDP User by GitHub Action"

          # Add user to groups
          Add-LocalGroupMember -Group "Administrators" -Member $username -ErrorAction SilentlyContinue
          Add-LocalGroupMember -Group "Remote Desktop Users" -Member $username -ErrorAction SilentlyContinue

          # Save credentials to env
          echo "RDP_USER=$username" >> $env:GITHUB_ENV
          echo "RDP_PASS=$password" >> $env:GITHUB_ENV

          Write-Host "User $username created successfully with password $password"

      - name: Install Tailscale
        run: |
          $tsUrl = "https://pkgs.tailscale.com/stable/tailscale-setup-1.82.0-amd64.msi"
          $installerPath = "$env:TEMP\tailscale.msi"
          Invoke-WebRequest -Uri $tsUrl -OutFile $installerPath
          Start-Process msiexec.exe -ArgumentList "/i", "`"$installerPath`"", "/quiet", "/norestart" -Wait
          Remove-Item $installerPath -Force

      - name: Establish Tailscale Connection
        run: |
          & "$env:ProgramFiles\Tailscale\tailscale.exe" up --authkey=${{ secrets.TAILSCALE_AUTH_KEY }} --hostname=gh-rdp-$env:GITHUB_RUN_ID

          # Wait for Tailscale IP
          $tsIP = $null
          $retries = 0
          while (-not $tsIP -and $retries -lt 10) {
              $tsIP = & "$env:ProgramFiles\Tailscale\tailscale.exe" ip -4
              Start-Sleep -Seconds 5
              $retries++
          }

          if (-not $tsIP) { throw "Tailscale IP not assigned" }
          echo "TAILSCALE_IP=$tsIP" >> $env:GITHUB_ENV

      - name: Verify RDP Accessibility
        run: |
          Write-Host "Testing RDP connection on $env:TAILSCALE_IP ..."
          $test = Test-NetConnection -ComputerName $env:TAILSCALE_IP -Port 3389
          if (-not $test.TcpTestSucceeded) { throw "RDP port not accessible" }
          Write-Host "RDP TCP connectivity OK!"

      - name: Keep Session Alive
        run: |
          Write-Host "`n=== RDP INFO ==="
          Write-Host "IP Address : $env:TAILSCALE_IP"
          Write-Host "Username   : $env:RDP_USER"
          Write-Host "Password   : $env:RDP_PASS"
          Write-Host "=============`n"

          while ($true) {
            Write-Host "[$(Get-Date)] Session active..."
            Start-Sleep -Seconds 300
          }
